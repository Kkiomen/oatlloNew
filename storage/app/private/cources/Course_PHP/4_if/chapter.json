{
    "title": "PHP – conditional statements: if, else, elseif, switch, and match",
    "description": "Learn conditional statements in PHP: if, else, elseif, switch, and match. Control your program’s logic with practical examples.",
    "slug": "conditional-instructions",
    "full_description": "<h1>Conditional statements in PHP – if, else, elseif, switch, and match</h1><p>Conditional statements allow you to make decisions in a program depending on whether conditions are met. Thanks to them, the application becomes dynamic and responsive to input data. In this chapter, you will learn <strong>if, else, elseif, switch</strong>, and the modern <strong>match</strong> operator.</p><h2>If statement</h2><pre><code class=\"language-php\">&lt;?php\n$age = 18;\n\nif ($age &gt;= 18) {\n    echo \"You are an adult.\";\n}\n</code></pre><h2>If – else</h2><pre><code class=\"language-php\">&lt;?php\n$loggedIn = false;\n\nif ($loggedIn) {\n    echo \"Welcome back!\";\n} else {\n    echo \"Please log in to continue.\";\n}\n</code></pre><h2>If – elseif – else</h2><pre><code class=\"language-php\">&lt;?php\n$score = 75;\n\nif ($score &gt;= 90) {\n    echo \"Grade: A\";\n} elseif ($score &gt;= 75) {\n    echo \"Grade: B\";\n} elseif ($score &gt;= 50) {\n    echo \"Grade: C\";\n} else {\n    echo \"Grade: F\";\n}\n</code></pre><h2>Switch statement</h2><p>The <code>switch</code> statement is useful when there are multiple possible cases to handle.</p><pre><code class=\"language-php\">&lt;?php\n$day = \"Monday\";\n\nswitch ($day) {\n    case \"Monday\":\n        echo \"Start of the week\";\n        break;\n    case \"Friday\":\n        echo \"Almost the weekend\";\n        break;\n    case \"Saturday\":\n    case \"Sunday\":\n        echo \"Weekend!\";\n        break;\n    default:\n        echo \"Weekday\";\n}\n</code></pre><h2>The modern match (PHP 8+)</h2><p>Since PHP 8, the <code>match</code> operator has been available. It works similarly to <code>switch</code> but is more concise and returns a value.</p><pre><code class=\"language-php\">&lt;?php\n$day = \"Monday\";\n\n$message = match($day) {\n    \"Monday\" =&gt; \"Start of the week\",\n    \"Friday\" =&gt; \"Almost the weekend\",\n    \"Saturday\", \"Sunday\" =&gt; \"Weekend!\",\n    default =&gt; \"Weekday\"\n};\n\necho $message;\n</code></pre><h2>Best practices</h2><ol><li>Use <code>===</code> instead of <code>==</code> to avoid unexpected type conversions.</li><li>For multiple conditions, prefer <code>match</code> – it is clearer and safer.</li><li>Remember to use <code>break</code> in <code>switch</code> to avoid accidental “fall-through” between cases.</li></ol><section class=\"faq\"><h2>FAQ</h2><h3>When should I use switch and when if?</h3><p><code>if</code> is used for logical conditions, while <code>switch</code> is more convenient when comparing one variable to multiple values.</p><h3>What’s the difference between match and switch?</h3><p><code>match</code> returns a value, is more concise, and requires strict type matching.</p><h3>Can conditional statements be nested?</h3><p>Yes, but nesting should be used carefully – it’s often better to split logic into functions.</p></section>",
    "position": 4
}
